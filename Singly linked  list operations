#include<stdio.h>
#include<stdlib.h>
struct node
{
    char usn[10];
    char name[10];
    char branch[10];
    char sem[10];
    char ph_no[10];
    struct node * link;
};
struct node *head=NULL;
struct node *createnode()
{
    struct node *temp;
    temp=malloc(sizeof(struct node));
    printf("enter the usn\n");
    fflush(stdin);
    scanf("%s",temp->usn);
    printf("enter the name\n");
    scanf("%s",temp->name);
    printf("enter the branch\n");
    scanf("%s",temp->branch);
    printf("enter the sem\n");
    scanf("%s",temp->sem);
    printf("enter the ph no.\n");
    scanf("%s",temp->ph_no);
    temp->link=NULL;
    return temp;
 }
 void insertfront()
 {
    struct node *sll=NULL;
    sll=createnode();
    if(head!=NULL)
    sll->link=head;
    head=sll;
 }
 void delfront()
 {
    struct node *sll=head;
    printf("the deleted node is:\n");
    printf("usn:%s",sll->usn);
    printf("name:%s",sll->name);
    printf("branch:%s",sll->branch);
    printf("sem:%s",sll->sem);
    printf("ph no.:%s",sll->ph_no);
    head=sll->link;
    free(sll);
 }
 void insertend()
 {
    struct node *sll,*temp=head;
    sll=createnode();
    if(head==NULL)
    head=sll;
    else
    {
        while(temp->link!=NULL)
        temp=temp->link;
        temp->link=sll;
     }
 }
 void delend()
 {
     struct node *temp=head;
     struct node *t;
     if(head==NULL)
     printf("linked list is empty\n");
     else
     {
        while(temp->link!=NULL)
        {
            t=temp;
            temp=temp->link;
        }
        printf("the deleted node is:\n");
        printf("usn=%s",temp->usn);
        printf("name=%s",temp->name);
        printf("branch=%s",temp->branch);
        printf("sem=%s",temp->sem);
        printf("ph no.=%s",temp->ph_no);
        free(t->link);
        t->link=NULL;
     }
 }
 void create()
 {
     int n,i;
     printf("enter the no. of students\n");
     scanf("%d",&n);
     for(i=1;i<=n;i++)
     {
        insertfront();
     }
 }
 void display()
 {
     int c=0;
     struct node *temp=head;
     while(temp!=NULL)
     {
        fflush(stdout);
        printf("\nusn=%s\n",temp->usn);
        printf("name=%s\n",temp->name);
        printf("branch=%s\n",temp->branch);
        printf("sem=%s\n",temp->sem);
        printf("ph no.=%s\n",temp->ph_no);
        temp=temp->link;
        c=c+1;
     }
     printf("\nthe no. of nodes are:%d\n",c);
}
void stack()
{
       int ch;
       printf("enter your choice\n1.push\n2.pop\n3.display\n");
       scanf("%d",&ch);
       switch(ch)
       {
            case 1:printf("enter the details to be pushed onto the stack\n");
                    insertfront();
                    break;
            case 2:printf("the deleted node is:\n");
                    delfront();
            case 3:printf("the elements of the stack are:\n");
                    display();
        }
 }
 void queue()
 {
       int ch;
       printf("enter your choice\n1.insert\n2.delete\n3.display\n");
       scanf("%d",&ch);
       switch(ch)
       {
            case 1:printf("enter the details to be inserted onto the queue\n");
                    insertend();
                    break;
            case 2:printf("the deleted node is:\n");
                    delfront();
                    break;
            case 3:printf("the queue is\n");
                    display();
       }
 }
 void main()
 {
       int ch1,ch2,ch3;
       while(1)
       {
            printf("\nenter your choice\n1.create\n2.display and count\n3.insert and delete from end\n4.insert and delete from front\n5.sll as stack\n6.sll as queue\n7.exit\n");
            scanf("%d",&ch1);
            switch(ch1)
            {
                case 1:create();
                        break;
                case 2:display();
                        break;
                case 3:printf("enter your choice:1.insert\n2.delete\n");
                        scanf("%d",&ch2);
                        if(ch2==1)
                        insertend();
                        else
                        delend();
                        break;
                 case 4:printf("enter your choice:1.insert\n2.delete\n");
                        scanf("%d",&ch3);
                        if(ch3==1)
                        insertfront();
                        else
                        delfront();
                        break;
                 case 5:stack();
                        break;
                 case 6:queue();
                        break;
                 case 7:exit(0);
              }
         }
 }

                 
                        
                        
                
        
     
     
     
        
            
    
 
    
    
