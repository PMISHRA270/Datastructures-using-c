#include<stdio.h>
#include<string.h>
#define MAX 10
void push(char,int *,char[]);
char pop(int *,char[]);
int g(char);
int f(char);
void convert(char[],char[]);
void main()
{
    char infix[20],postfix[20];
    printf("enter a valid infix expression\n");
    scanf("%s",infix);
    convert(infix,postfix);
    printf("the postfix expression is:%s\n",postfix);
 }
 void push(char item,int *top,char s[])
 {
    if(*top==MAX-1)
    {
        printf("Stack overflow\n");
        return;
    }
    s[++(*top)]=item;
 }
 char pop(int *top,char s[])
 {
    char ele;
    if(*top==-1)
    return 0;
    ele=s[(*top)--];
    return ele;
 }
 int g(char symbol)
 {
    switch(symbol)
    {
        case '+':
        case '-':return 1;
        case '*':
        case '/':return 3;
        case '^':
        case '$':return 6;
        case '(':return 9;
        case ')':return 0;
        default:return 7;
     }
 }
 int f(char symbol)
 {
      switch(symbol)
      {
          case '+':
          case '-':return 2;
          case '*':
          case '/':return 4;
          case '^':
          case '$':return 5;
          case '(':return 0;
          case '#':return -1;
          default:return 8;
       }
 }
 void convert(char infix[],char postfix[])
 {
    int i,j,top;
    char s[MAX],symbol;
    top=-1;
    push('#',&top,s);
    j=0;
    for(i=0;i<strlen(infix);i++)
    {
        symbol=infix[i];
        while(f(s[top])>g(symbol))
        {
            postfix[j]=pop(&top,s);
            j++;
         }
         if(f(s[top])!=g(symbol))
         push(symbol,&top,s);
         else
         pop(&top,s);
     }
     while(s[top]!='#')
     {
        postfix[j]=pop(&top,s);
        j++;
      }
      postfix[j]='\0';
 }
     
     
    
    
